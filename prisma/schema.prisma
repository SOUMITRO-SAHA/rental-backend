// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL_LOCAL")
}

enum AuthRoles {
  USER
  ADMIN
  MANAGER
  TENDER
}

model User {
  id                   Int           @id @default(autoincrement())
  name                 String
  email                String        @unique
  password             String
  token                String?
  role                 AuthRoles     @default(USER)
  forgotPasswordToken  String?
  forgotPasswordExpiry DateTime?
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
  appointments         Appointment[]
  tickets              Ticket[]
}

model Property {
  id                 Int      @id @default(autoincrement())
  numberOfBedrooms   Int
  numberOfBathrooms  Int
  possession         String
  hasBalcony         Boolean
  isApartment        Boolean
  apartmentType      String
  hasParking         Boolean
  hasPowerBackup     Boolean
  buildingAge        String
  maintenanceCharges Float
  builtupArea        Float
  furnishingStatus   String
  floor              String
  gatedSecurity      Boolean
  ownershipType      String
  flooring           String
  carpetArea         Float
  facing             String
  location           String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  Photo              Photo[]  @relation("PropertyPhotos")
}

model Photo {
  id         Int      @id @default(autoincrement())
  url        String
  property   Property @relation("PropertyPhotos", fields: [propertyId], references: [id])
  propertyId Int
}

model Appointment {
  id          Int      @id @default(autoincrement())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  startTime   DateTime
  endTime     DateTime
  description String?
}

model Ticket {
  id          Int          @id @default(autoincrement())
  userId      Int
  subject     String
  description String
  status      TicketStatus @default(OPEN)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  user        User         @relation(fields: [userId], references: [id])
}

enum TicketStatus {
  OPEN
  IN_PROGRESS
  RESOLVED
  CLOSED
}
